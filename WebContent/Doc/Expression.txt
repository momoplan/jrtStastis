Expression.gt：对应SQL条件中的"field > value "。如：Expression.gt("salary", new Integer(5000))  
Expression.ge：对应SQL条件中的"field >= value"。  
Expression.lt：对应SQL条件中的"field < value"。  
Expression.le：对应SQL条件中的"field <= value"。  
Expression.between：对应SQL条件中的"between"。  
Expression.like：对应SQL条件中的"field like value"。  
Expression.in：对应SQL条件中的"field in …"。  
Expression.eqProperty：用于比较两个属性之间的值，对应SQL条件中的"field = field"。如：Expression.eqProperty("Employee.id", "Group.eid");  
Expression.gtProperty：用于比较两个属性之间的值，对应SQL条件中的"field > field"。  
Expression.geProperty：用于比较两个属性之间的值，对应SQL条件中的"field >= field"。  
Expression.ltProperty：用于比较两个属性之间的值，对应SQL条件中的"field < field"。  
Expression.leProperty：用于比较两个属性之间的值，对应SQL条件中的"field <= field"。  
Expression.and：and关系组合。  


使用Hibernate获取最大值(max)的三种方法 

获取最大值的三种方法:

1. 使用 hsql
Integer c = (Integer)dbt.getSession().createQuery("select max(a.ArticleId) from Article a " ).uniqueResult();
System.out.println(c);
注意：要加上别名“a”, a.ArticleId注意大小写! 否则会出现"无法解释的属性"错误!

2. 使用native sql
sql = "select max(articleid) maxid from ljarticle";
maxId = (Integer)(session.createSQLQuery(sql).addScalar("maxId", Hibernate.INTEGER) ).uniqueResult();
注意：要加上“maxid”标量

3. 使用criteria
Integer c = (Integer)dbt.getSession().createCriteria(Article.class)
.setProjection( Projections.projectionList().add(Projections.max("ArticleId " ) ) )
.uniqueResult() ;
同样要注意ArticleId是区分大小写的!
